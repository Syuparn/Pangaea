# no args
assertEq(<{yield \ if \ < 3; recur(\ + 1)}>.new(1).chain.A, [1, 2])
# one arg
assertEq(<{yield \ if \ < 3; recur(\ + 1)}>.new(1).chain([3, 4]).A, [1, 2, 3, 4])
# two args
assertEq(<{yield \ if \ < 3; recur(\ + 1)}>.new(1).chain([3, 4], [5, 6]).A, [1, 2, 3, 4, 5, 6])
# chain of other iterables
assertEq(<{yield \ if \ < 3; recur(\ + 1)}>.new(1).chain("abc").A, [1, 2, "a", "b", "c"])

# chain returns iter (not arr)
assertEq(<{yield \ if \ < 3; recur(\ + 1)}>.new(1).chain.proto, Iter)
